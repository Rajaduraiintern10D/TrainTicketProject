// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketBookingProject.Data.ApplicationDbContext;

#nullable disable

namespace TicketBookingProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240507111358_AddP_IdColumnToImage")]
    partial class AddP_IdColumnToImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketBookingProject.Data.Models.Image", b =>
                {
                    b.Property<int>("Image_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Image_Id"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("P_Id")
                        .HasColumnType("int");

                    b.HasKey("Image_Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("TicketBookingProject.Data.Models.TrainDetails", b =>
                {
                    b.Property<int>("TrainNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainNumber"));

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("DepartureTime")
                        .HasColumnType("time");

                    b.Property<string>("DestinationCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DestinationDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("DestinationTime")
                        .HasColumnType("time");

                    b.Property<string>("StartingCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainNumber");

                    b.ToTable("TrainDetails");
                });

            modelBuilder.Entity("TicketBookingProject.Data.Models.TrainWiseSeatAvailability", b =>
                {
                    b.Property<int>("TrainNumber")
                        .HasColumnType("int");

                    b.Property<int>("FirstClassFare")
                        .HasColumnType("int");

                    b.Property<int>("FirstClassTotalSeat")
                        .HasColumnType("int");

                    b.Property<int>("SecondClassFare")
                        .HasColumnType("int");

                    b.Property<int>("SecondClassTotalSeat")
                        .HasColumnType("int");

                    b.Property<int>("SleeperClassFare")
                        .HasColumnType("int");

                    b.Property<int>("SleeperClassTotalSeat")
                        .HasColumnType("int");

                    b.HasKey("TrainNumber");

                    b.ToTable("TrainWiseSeatAvailabilities");
                });

            modelBuilder.Entity("TicketBookingProject.Models.PassengerDetails", b =>
                {
                    b.Property<int>("P_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_Id"));

                    b.Property<DateTime>("BookedTicketTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("DepartureTime")
                        .HasColumnType("time");

                    b.Property<string>("DestinationCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DestinationDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("DestinationTime")
                        .HasColumnType("time");

                    b.Property<int>("Passenger_Age")
                        .HasColumnType("int");

                    b.Property<string>("Passenger_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passenger_gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartingCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalFare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalTicketCount")
                        .HasColumnType("int");

                    b.Property<int>("TrainNumber")
                        .HasColumnType("int");

                    b.HasKey("P_Id");

                    b.HasIndex("TrainNumber");

                    b.ToTable("PassengerDetails");
                });

            modelBuilder.Entity("TicketBookingProject.Models.UsersCredential", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<string>("MailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_ID");

                    b.ToTable("UsersCredential");
                });

            modelBuilder.Entity("TicketBookingProject.Data.Models.TrainWiseSeatAvailability", b =>
                {
                    b.HasOne("TicketBookingProject.Data.Models.TrainDetails", "TrainDetails")
                        .WithOne("SeatAvailability")
                        .HasForeignKey("TicketBookingProject.Data.Models.TrainWiseSeatAvailability", "TrainNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainDetails");
                });

            modelBuilder.Entity("TicketBookingProject.Models.PassengerDetails", b =>
                {
                    b.HasOne("TicketBookingProject.Data.Models.TrainDetails", "Train")
                        .WithMany()
                        .HasForeignKey("TrainNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TicketBookingProject.Data.Models.TrainDetails", b =>
                {
                    b.Navigation("SeatAvailability")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
